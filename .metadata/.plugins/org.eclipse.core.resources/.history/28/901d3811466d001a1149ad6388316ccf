package com.example.main.controller;


import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.example.main.model.JwtUser;
import com.example.main.security.JwtGenerator;
import com.example.main.service.JwtUserService;

@RestController
@RequestMapping("/main")
public class LoginController {
	   @Autowired
	    AuthenticationManager authenticationManager;
	  
	@Autowired
	JwtUserService jwtUserService;

    private JwtGenerator jwtGenerator;

    public LoginController(JwtGenerator jwtGenerator) {
        this.jwtGenerator = jwtGenerator;
    }

    @PostMapping()
    public ResponseEntity  generate(@RequestBody JwtUser jwtuser) {
    	HttpHeaders headers = new HttpHeaders();

    JwtUser user=new JwtUser();

   user= jwtUserService.getUserByUserName(jwtuser.getUserName());
   
   authenticationManager
   .authenticate
   (new UsernamePasswordAuthenticationToken(user.getUserName(), user.getPassword()));

   if(user==null)  return new ResponseEntity<>(
          					"user not found", 
          					HttpStatus.NOT_FOUND);
System.out.println(user);
System.out.println(jwtuser);
   if(!user.getPassword().equals(jwtuser.getPassword())) 
	   return new ResponseEntity<>(
					"wrong password", 
					HttpStatus.NOT_FOUND);
   System.out.println(jwtGenerator.generate(user));
   headers.add("Authorisation", "Token "+jwtGenerator.generate(user));
   return new ResponseEntity<>(
	          "token  ", headers, HttpStatus.ACCEPTED);
        
         
    }

}
